services:

  discovery-server-1:
    container_name: discovery-server-1
    restart: on-failure
    image: 'openjdk:21-jdk'
    volumes:
      - ./discovery-server/target/discovery-server-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server'
      - 'SPRING_PROFILES_ACTIVE=s1'
    command: "java -jar /app.jar"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost/actuator/health", "-f", "-s", "-o", "/dev/null" ]
      interval: 5s
      timeout: 2s
      retries: 12
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - '8181:80'

  discovery-server-2:
    container_name: discovery-server-2
    restart: on-failure
    image: 'openjdk:21-jdk'
    volumes:
      - ./discovery-server/target/discovery-server-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server'
      - 'SPRING_PROFILES_ACTIVE=s2'
    command: "java -jar /app.jar"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost/actuator/health", "-f", "-s", "-o", "/dev/null" ]
      interval: 5s
      timeout: 2s
      retries: 12
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - '8282:80'

  discovery-server-3:
    container_name: discovery-server-3
    restart: on-failure
    image: 'openjdk:21-jdk'
    volumes:
      - ./discovery-server/target/discovery-server-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server'
      - 'SPRING_PROFILES_ACTIVE=s3'
    command: "java -jar /app.jar"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost/actuator/health", "-f", "-s", "-o", "/dev/null" ]
      interval: 5s
      timeout: 2s
      retries: 12
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - '8383:80'

  config-server:
    container_name: config-server
    restart: on-failure
    image: 'openjdk:21-jdk'
    volumes:
      - ./config-server/target/config-server-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
    command: "java -jar /app.jar"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:9998/actuator/health", "-f", "-s", "-o", "/dev/null" ]
      interval: 5s
      timeout: 2s
      retries: 12

  gateway:
    container_name: gateway
    restart: on-failure
    image: 'openjdk:21-jdk'
    volumes:
      - ./gateway/target/gateway-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server'
      - 'SPRING_PROFILES_ACTIVE=discovery-cluster-client'
      - 'EUREKA_INSTANCE_HOSTNAME=gateway'
      - 'HTTPBIN_URI=http://httpbin'
    command: "java -jar /app.jar"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost/actuator/health", "-f", "-s", "-o", "/dev/null" ]
      interval: 5s
      timeout: 2s
      retries: 6
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server-1:
        condition: service_healthy
      discovery-server-2:
        condition: service_healthy
      discovery-server-3:
        condition: service_healthy

  svc-aaa-1:
    container_name: svc-aaa-1
    image: 'openjdk:21-jdk'
    volumes:
      - ./svc/target/svc-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server'
      - 'SPRING_PROFILES_ACTIVE=discovery-cluster-client'
      - 'SPRING_APPLICATION_NAME=svc-aaa'
      - 'EUREKA_INSTANCE_HOSTNAME=svc-aaa-1'
      - 'INSTANCE_ID=1'
    command: "java -jar /app.jar"
    depends_on:
      gateway:
        condition: service_healthy

  svc-aaa-2:
    container_name: svc-aaa-2
    image: 'openjdk:21-jdk'
    volumes:
      - ./svc/target/svc-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server'
      - 'SPRING_PROFILES_ACTIVE=discovery-cluster-client'
      - 'SPRING_APPLICATION_NAME=svc-aaa'
      - 'EUREKA_INSTANCE_HOSTNAME=svc-aaa-2'
      - 'INSTANCE_ID=2'
    command: "java -jar /app.jar"
    depends_on:
      gateway:
        condition: service_healthy

  svc-bbb-1:
    container_name: svc-bbb-1
    image: 'openjdk:21-jdk'
    volumes:
      - ./svc/target/svc-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server'
      - 'SPRING_PROFILES_ACTIVE=discovery-cluster-client'
      - 'SPRING_APPLICATION_NAME=svc-bbb'
      - 'EUREKA_INSTANCE_HOSTNAME=svc-bbb-1'
      - 'INSTANCE_ID=1'
    command: "java -jar /app.jar"
    depends_on:
      gateway:
        condition: service_healthy

  svc-bbb-2:
    container_name: svc-bbb-2
    image: 'openjdk:21-jdk'
    volumes:
      - ./svc/target/svc-1.0.jar:/app.jar
    environment:
      - 'SERVER_PORT=80'
      - 'SPRING_CLOUD_CONFIG_URI=http://config-server'
      - 'SPRING_PROFILES_ACTIVE=discovery-cluster-client'
      - 'SPRING_APPLICATION_NAME=svc-bbb'
      - 'EUREKA_INSTANCE_HOSTNAME=svc-bbb-2'
      - 'INSTANCE_ID=2'
    command: "java -jar /app.jar"
    depends_on:
      gateway:
        condition: service_healthy

  nginx:
    container_name: nginx
    image: 'nginx:latest'
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      gateway:
        condition: service_healthy

  httpbin:
    container_name: httpbin
    image: 'kennethreitz/httpbin'
